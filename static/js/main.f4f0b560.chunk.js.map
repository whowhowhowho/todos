{"version":3,"sources":["serviceWorker.js","components/todos/components/TodosItem.jsx","components/todos/components/Todos.jsx","index.js"],"names":["Boolean","window","location","hostname","match","ContenArray","number","Todos","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","EnterKey","event","Imformation","state","keycode","keyCode","assignment","target","value","replace","array","circleColor","rectangleGreen","contentTxtColor","contentTxtUnderline","entryDisplay","Input_Display","Span_Display","Content_Padding","Tree_Display","setState","Down_Display","EstablishConten","AllElection","DownArrow_color_flag","ChangeDownArrow","ChangeColour","ChangeDownArrow2","ChangeColourBack","sel","assertThisInitialized","i","map","item","react_default","a","createElement","className","key","style","display","border","onClick","ChangeCircle","bind","backgroundColor","color","textDecoration","padding","type","onBlur","InputBlur","onKeyUp","InputKeyup","onFocus","InputFocus","onDoubleClick","DoubleClickModify","DeleteEntry","n","length","ChangeColourConcise","ChangeColourConcise2","keynumber","ClearCompleted_Display","DownArrow_color","componentDidMount","Deletekey","DeleteImformation","ShowAll","Allborder","Activeborder","Completedborder","ShowActive","ShowCompleted","ClearCompleted","Modifykey","ChangeInput","Focuskey","upkey","ChangeInput2","blurkeyup_flag","Blurkey","e","e2","e3","Imformation2","splice","changemodifykey","changemodifykey2","id","borderTop","placeholder","autoComplete","ref","React","Component","TodosItem_Todos","ReactDOM","render","Todos_Todos","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f4f0b560.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nlet  ContenArray\r\nlet  number=0\r\nexport default class Todos extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            Down_Display:'none',\r\n            DownArrow_color:'10px solid rgba(45,45,45,0.15)',\r\n            DownArrow_color_flag:true,\r\n            ClearCompleted_Display:'none',\r\n            Allborder:'1px solid rgb(219, 190, 190)',\r\n            Activeborder:'1px solid #FFF',\r\n            Completedborder:'1px solid #FFF',\r\n            blurkeyup_flag:'true',\r\n            Imformation: {\r\n                array:[],\r\n                circleColor:[],\r\n                rectangleGreen:[],\r\n                contentTxtColor:[],\r\n                contentTxtUnderline:[],\r\n                entryDisplay:[],\r\n                Input_Display:[],\r\n                Span_Display:[],\r\n                Content_Padding:[],\r\n                Tree_Display:[]\r\n            }\r\n    }\r\n}\r\n    render(){\r\n     \r\n        return <div>\r\n                <div id='Input' className='TodosItem'>\r\n                      <div  className='TodosItem_DownArrow'>\r\n                          <div id='DownArrow' style={{display:this.state.Down_Display}} onClick={this.AllElection}>\r\n                          <div id='DownArrow_White' className='TodosItem_DownArrow_White TodosItem_DownArrow_Identical'></div>\r\n                          <div id='DownArrow_Ash' className='TodosItem_DownArrow_Ash TodosItem_DownArrow_Identical' style={{borderTop:this.state.DownArrow_color}}></div>\r\n                          </div>\r\n                      </div>\r\n                      <input type=\"text\" className='TodosItem_input' id='assignment' placeholder=\"what needs to be done?\" autoComplete='off' onKeyUp={this.EnterKey}></input>\r\n                      <div>\r\n                          <div id='DropdownBox' ref='DropdownBox'>\r\n                            { ContenArray}\r\n                          </div>\r\n\r\n                          <div id='BottomButton' style={{display:this.state.Down_Display}}>\r\n                              <div id='Topmost' className='TodosItem_Topmost'>\r\n                                    <div id='ItemsLeft'>{number}items left</div>\r\n                                    <button id='All' className='TodosItem_Identical' style={{border:this.state.Allborder}} onClick={this.ShowAll}>All</button>\r\n                                    <button id='Active' className='TodosItem_Identical' style={{border:this.state.Activeborder}} onClick={this.ShowActive}>Active</button>\r\n                                    <button id='Completed' className='TodosItem_Identical' style={{border:this.state.Completedborder}} onClick={this.ShowCompleted}>Completed</button>\r\n                                    <button id='ClearCompleted' className='TodosItem_ClearCompleted' style={{display:this.state.ClearCompleted_Display}} onClick={this.ClearCompleted}>Clear Completed</button>\r\n                              </div>\r\n                              <div  className='TodosItem_arrangement'>\r\n                                    <div id='CentralSection' className='TodosItem_CentralSection TodosItem_CLL'></div>\r\n                                    <div id='Lowest' className='TodosItem_Lowest TodosItem_CLL'></div>\r\n                                    <div id='LowestLevel' className='TodosItem_LowestLevel TodosItem_CLL'></div>\r\n                              </div>\r\n                         </div>\r\n\r\n                         </div>\r\n                    \r\n                 </div>\r\n               </div>\r\n    }\r\ncomponentDidMount(){\r\n    this.setState({})\r\n    this.EstablishConten()\r\n}\r\nEnterKey=(event)=>{\r\nconst {Imformation}=this.state\r\nconst keycode=event.keyCode,assignment=event.target.value\r\nif(keycode===13&&assignment.replace(/\\s+/g,\"\")!==\"\"){\r\n   Imformation.array[number]=assignment\r\n   Imformation.circleColor[number]='1px solid #ddd'\r\n   Imformation.rectangleGreen[number]='#FFF'\r\n   Imformation.contentTxtColor[number]='#1a1527'\r\n   Imformation.contentTxtUnderline[number]=''\r\n   Imformation.entryDisplay[number]=''\r\n   Imformation.Input_Display[number]='none'\r\n   Imformation.Span_Display[number]=''\r\n   Imformation.Content_Padding[number]='10px'\r\n   Imformation.Tree_Display[number]=''\r\n   this.setState({\r\n   Down_Display:'',\r\n   Imformation:Imformation\r\n   })\r\n   number++\r\n   this.EstablishConten()\r\n   event.target.value=''\r\n}\r\n\r\n}\r\nAllElection=()=>{\r\nswitch(this.state.DownArrow_color_flag){\r\n    case true:\r\n         this.ChangeDownArrow()\r\n         this.ChangeColour()\r\n\r\n         break;\r\n    case false:\r\n         this.ChangeDownArrow2()\r\n         this.ChangeColourBack()\r\n         break;\r\n    default:\r\n         break;\r\n\r\n}\r\n}\r\nEstablishConten=()=>{\r\nconst {Imformation}=this.state\r\nconst sel=this\r\nlet i=-1\r\nContenArray=Imformation.array.map((item)=>{ \r\n    i++\r\n    return <div className='TodosItem_entry' key={i} style={{display:Imformation.entryDisplay[i]}}>\r\n    <div className='TodosItem_Hook'>\r\n         <div className='TodosItem_circle' \r\n              style={{border:Imformation.circleColor[i],display:Imformation.Tree_Display[i]}} \r\n              onClick={sel.ChangeCircle.bind(this,i)}>\r\n\r\n              <div className='TodosItem_rectangleGreen' \r\n                   style={{ backgroundColor:Imformation.rectangleGreen[i]}}>\r\n              </div>\r\n\r\n              <div className='TodosItem_rectangleWhite'></div>\r\n         </div>\r\n    </div>\r\n    <div className='TodosItem_content' \r\n         style={{color:Imformation.contentTxtColor[i],\r\n                 textDecoration:Imformation.contentTxtUnderline[i],\r\n                 padding:Imformation.Content_Padding[i]}}>\r\n\r\n        <input type='text' \r\n               onBlur={sel.InputBlur.bind(this,i)} \r\n               onKeyUp={sel.InputKeyup.bind(this,i)} \r\n               className='TodosItem_Double_click_Modification'  \r\n               style={{display:Imformation.Input_Display[i]}}\r\n               onFocus={sel.InputFocus.bind(this,i)}>\r\n        </input>\r\n        <span style={{display:Imformation.Span_Display[i]}} onDoubleClick={sel.DoubleClickModify.bind(this,i)}>{item}</span>\r\n    </div>\r\n\r\n    <div className='TodosItem_cross' onClick={sel.DeleteEntry.bind(this,i)}>\r\n        <div className='TodosItem_fork'  style={{display:Imformation.Tree_Display[i]}}></div>\r\n        <div className='TodosItem_fork2' style={{display:Imformation.Tree_Display[i]}}></div>\r\n    </div>\r\n    </div>\r\n    })\r\n}\r\nChangeColour=()=>{\r\n    const {Imformation}=this.state\r\n    for(let n=0;n<Imformation.array.length;n++){\r\n        this.ChangeColourConcise(n)\r\n    }\r\n    }\r\n    \r\nChangeColourBack=()=>{\r\n    const {Imformation}=this.state\r\n    for(let n=0;n<Imformation.array.length;n++){\r\n        this.ChangeColourConcise2(n)\r\n    }\r\n    }\r\n\r\nChangeCircle=(keynumber)=>{\r\n        const {Imformation}=this.state\r\n        this.setState({\r\n            ClearCompleted_Display:'',\r\n        })\r\n         if(Imformation.rectangleGreen[keynumber]==='#FFF'){\r\n            this.ChangeColourConcise(keynumber)\r\n            number--\r\n         }else{\r\n            this.ChangeColourConcise2(keynumber)\r\n            number++\r\n            this.setState({\r\n                DownArrow_color:'10px solid rgba(45,45,45,0.15)',\r\n                DownArrow_color_flag:true\r\n                \r\n            })\r\n         } \r\n         if(number===0){\r\n            this.ChangeDownArrow()\r\n         }else if(number===Imformation.array.length){\r\n            this.setState({\r\n                ClearCompleted_Display:'none',\r\n            })\r\n         }\r\n         this.componentDidMount()\r\n    }\r\nDeleteEntry=(Deletekey)=>{\r\n    const {Imformation}=this.state\r\n    if(Imformation.rectangleGreen[Deletekey]==='#FFF'){\r\n        number--\r\n    }\r\n    this.DeleteImformation(Deletekey)\r\n    if(Imformation.array.length===0){\r\n       this.setState({\r\n           Down_Display:'none',\r\n           ClearCompleted_Display:'none'\r\n       })\r\n    }else if(number===Imformation.array.length){\r\n        this.setState({\r\n            ClearCompleted_Display:'none',\r\n        })\r\n     }\r\n     this.componentDidMount()\r\n}\r\n\r\nShowAll=()=>{\r\n    const {Imformation}=this.state\r\n    for(let n=0;n<Imformation.array.length;n++){\r\n        Imformation.entryDisplay[n]=''\r\n    }\r\n    this.setState({\r\n        Allborder:'1px solid rgb(219, 190, 190)',\r\n        Activeborder:'1px solid #FFF',\r\n        Completedborder:'1px solid #FFF',\r\n        Imformation: Imformation\r\n    })\r\n    this.componentDidMount()\r\n}\r\nShowActive=()=>{\r\n    const {Imformation}=this.state\r\n    for(let n=0;n<Imformation.array.length;n++){\r\n        if(Imformation.rectangleGreen[n]==='#FFF'){\r\n            Imformation.entryDisplay[n]=''\r\n        }else{\r\n            Imformation.entryDisplay[n]='none'\r\n        }\r\n    }\r\n    this.setState({\r\n        Allborder:'1px solid #FFF',\r\n        Activeborder:'1px solid rgb(219, 190, 190)',\r\n        Completedborder:'1px solid #FFF',\r\n        Imformation: Imformation\r\n    })\r\n    this.componentDidMount()\r\n}\r\nShowCompleted=()=>{\r\n    const {Imformation}=this.state\r\n    for(let n=0;n<Imformation.array.length;n++){\r\n        if(Imformation.rectangleGreen[n]==='#FFF'){\r\n            Imformation.entryDisplay[n]='none'\r\n        }else{\r\n            Imformation.entryDisplay[n]=''\r\n        }\r\n    }\r\n    this.setState({\r\n        Allborder:'1px solid #FFF',\r\n        Activeborder:'1px solid #FFF',\r\n        Completedborder:'1px solid rgb(219, 190, 190)',\r\n        Imformation: Imformation\r\n    })\r\n    this.componentDidMount()\r\n}\r\nClearCompleted=(event)=>{\r\n    const {Imformation}=this.state\r\n    for(let n=0; n<Imformation.array.length;n++){\r\n    if(Imformation.rectangleGreen[n]==='#99CCCC'){\r\n    this.DeleteImformation(n,event)\r\n    n=n-1\r\n    }   \r\n    }\r\n    if(Imformation.array.length===0){\r\n        this.setState({\r\n            Down_Display:'none',\r\n            DownArrow_color:'10px solid rgba(45,45,45,0.15)',\r\n            DownArrow_color_flag:true\r\n        })\r\n    }\r\n    if(number===Imformation.array.length){\r\n       this.setState({\r\n           ClearCompleted_Display:'none'\r\n       })\r\n    }\r\n    this.componentDidMount()\r\n}\r\nDoubleClickModify=(Modifykey)=>{\r\n    const {Imformation}=this.state\r\n    if(Imformation.Input_Display[Modifykey]==='none'){\r\n    this.ChangeInput(Modifykey)\r\n}\r\n}\r\nInputFocus=(Focuskey,event)=>{\r\n   const {Imformation}=this.state\r\n   event.target.value=Imformation.array[Focuskey]\r\n}\r\nInputKeyup=(upkey,event)=>{\r\n    const {Imformation}=this.state\r\n    if(event.target.value.replace(/\\s+/g,\"\")!==''&&event.keyCode===13){\r\n        Imformation.array[upkey]=event.target.value\r\n        this.ChangeInput2(upkey)\r\n    }else if(event.target.value.replace(/\\s+/g,\"\")===\"\"&&event.keyCode===13){\r\n        this.DeleteImformation(upkey)\r\n        number--\r\n        this.setState({\r\n            blurkeyup_flag:false\r\n        })\r\n\r\n    }\r\n    if(Imformation.array.length===0){\r\n        this.setState({\r\n            Down_Display:'none',\r\n            ClearCompleted_Display:'none'\r\n        })\r\n    }\r\n}\r\nInputBlur=(Blurkey,event)=>{\r\n    const {Imformation}=this.state\r\n    this.setState({\r\n        blurkeyup_flag:true\r\n    })\r\n    if(event.target.value.replace(/\\s+/g,\"\")!==''){\r\n        Imformation.array[Blurkey]=event.target.value\r\n        this.ChangeInput2(Blurkey)\r\n    }else if(event.target.value.replace(/\\s+/g,\"\")===\"\"&&this.state.blurkeyup_flag===true){\r\n        this.DeleteImformation(Blurkey)\r\n        number--\r\n    }\r\n    if(Imformation.array.length===0){\r\n        this.setState({\r\n            Down_Display:'none',\r\n            ClearCompleted_Display:'none'\r\n            \r\n        })\r\n    }\r\n}\r\nChangeColourConcise=(e)=>{\r\n    const {Imformation}=this.state\r\n    Imformation.circleColor[e]='1px solid #99CCCC'\r\n    Imformation.rectangleGreen[e]='#99CCCC'\r\n    Imformation.contentTxtColor[e]='#CCC'\r\n    Imformation.contentTxtUnderline[e]='line-through'\r\n    this.setState({\r\n        Imformation:Imformation\r\n    })\r\n    this.componentDidMount()\r\n}\r\nChangeColourConcise2=(e2)=>{\r\n    const {Imformation}=this.state\r\n    Imformation.circleColor[e2]='1px solid #ddd'\r\n    Imformation.rectangleGreen[e2]='#FFF'\r\n    Imformation.contentTxtColor[e2]='#1a1527'\r\n    Imformation.contentTxtUnderline[e2]=''\r\n    this.setState({\r\n        Imformation:Imformation\r\n    })\r\n    this.componentDidMount()\r\n}\r\nChangeDownArrow=()=>{\r\n    this.setState({\r\n        DownArrow_color:'10px solid #707070',\r\n        DownArrow_color_flag:false,\r\n        ClearCompleted_Display:'',\r\n    })\r\n    number=0\r\n}\r\nChangeDownArrow2=()=>{\r\n    const {Imformation}=this.state\r\n    this.setState({\r\n        DownArrow_color:'10px solid rgba(45,45,45,0.15)',\r\n        DownArrow_color_flag:true,\r\n        ClearCompleted_Display:'none',\r\n    })\r\n    number=Imformation.array.length\r\n}\r\nDeleteImformation=(e3)=>{\r\n    const {Imformation}=this.state\r\n    let Imformation2=Imformation\r\n    Imformation2.array.splice(e3,1)\r\n    Imformation2.circleColor.splice(e3,1)\r\n    Imformation2.rectangleGreen.splice(e3,1)\r\n    Imformation2.contentTxtColor.splice(e3,1)\r\n    Imformation2.contentTxtUnderline.splice(e3,1)\r\n    Imformation2.entryDisplay.splice(e3,1)\r\n    Imformation2.Input_Display.splice(e3,1)\r\n    Imformation2.Span_Display.splice(e3,1)\r\n    Imformation2.Content_Padding.splice(e3,1)\r\n    Imformation2.Tree_Display.splice(e3,1)\r\n    this.setState({\r\n        Imformation:Imformation2\r\n    })\r\n    this.componentDidMount()\r\n}\r\nChangeInput=(changemodifykey)=>{\r\n    const {Imformation}=this.state\r\n    Imformation.Input_Display[changemodifykey]=''\r\n    Imformation.Span_Display[changemodifykey]='none'\r\n    Imformation.Content_Padding[changemodifykey]=''\r\n    Imformation.Tree_Display[changemodifykey]='none'\r\n    this.setState({\r\n        Imformation:Imformation\r\n    })\r\n    this.componentDidMount()\r\n}\r\nChangeInput2=(changemodifykey2)=>{\r\n    const {Imformation}=this.state\r\n    Imformation.Input_Display[changemodifykey2]='none'\r\n    Imformation.Span_Display[changemodifykey2]=''\r\n    Imformation.Content_Padding[changemodifykey2]='10px'\r\n    Imformation.Tree_Display[changemodifykey2]=''\r\n    this.setState({\r\n        Imformation:Imformation\r\n    })\r\n    this.componentDidMount()\r\n}\r\n}","import React from 'react';\r\nimport '../css/todos.css'\r\nimport TodosItem from './TodosItem.jsx'\r\nexport default class Todos extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={}\r\n    }\r\n    render(){\r\n        return <div id='box'>\r\n                    <div id='title' className='Todos_div'>\r\n                        <span  className='Todos_spanTodos'>todos</span>   \r\n                    </div>\r\n\r\n                    <div>\r\n                        <TodosItem></TodosItem>  \r\n                    </div>\r\n                    <div className='Todos_SpanDouble'>\r\n                        <div className='Todos_spanDouble'>Double-click to edit a todo Created by petehunt Part of TodoMVC</div>\r\n                    </div>\r\n               </div>\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Todos from './components/todos/components/Todos.jsx'\r\nReactDOM.render(\r\n<div>\r\n  <Todos></Todos>\r\n</div>\r\n,\r\ndocument.getElementById('root'))\r\n\r\n\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}